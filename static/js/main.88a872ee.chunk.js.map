{"version":3,"sources":["components/Task.js","components/Day.js","App.js","index.js"],"names":["Task","task","delTask","color","changeColor","icon","changeIcon","edit","id","className","style","backgroundColor","onClick","Modal","setAppElement","Day","date","today","calendarinfo","useState","items","setItems","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","text","setText","editId","setEditId","inputRef","useRef","editInputRef","useEffect","updateItemsFromStorage","updateStorage","setTimeout","current","focus","handelKeyPress","e","key","addItem","editModalClose","oldVal","uuidv4","removeTask","filter","item","map","handleEdit","undefined","arr","obj","JSON","parse","localStorage","getItem","setItem","stringify","onDoubleClick","overlayClassName","isOpen","onRequestClose","spellCheck","ref","onKeyPress","onChange","target","value","type","spellcheck","sundayFirst","mondayFirst","getFirstDayOfCurrentMonth","todaysDate","Date","getFullYear","getMonth","getDay","App","dates","setDates","days","setDays","currentMonth","setCurrentMonth","setToday","startFiller","setStartFiller","endFiller","setEndFiller","msFiller","setmsFiller","meFiller","setmeFiller","monFirst","setMonFirst","calendarInfo","setCalendarInfo","console","log","info","tempDates","numOfDays","getDate","getNumDaysOfCurrentMonth","i","push","filler","tempStartFiller","fillAmt","daysUsed","length","tempEndFiller","getCurrentMonth","day","num","index","ReactDOM","render","document","getElementById"],"mappings":"oQAuEeA,EApEF,SAAC,GASP,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,KACAC,EACI,EADJA,GAEA,OACE,qCACE,cAAC,IAAD,CAAoBA,GAAIA,EAAxB,SACE,sBAAKC,UAAU,OAAOC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAAnD,UACY,SAATE,EACC,cAAC,IAAD,CAAwBI,UAAU,SACvB,UAATJ,EACF,cAAC,IAAD,CAAiBI,UAAU,UAE3B,GAEDR,OAIL,eAAC,IAAD,CAAaQ,UAAU,cAAcD,GAAIA,EAAzC,UACE,cAAC,IAAD,CAAUI,QAAS,kBAAML,EAAKC,EAAIP,IAAlC,kBAEA,cAAC,IAAD,CAAUQ,UAAU,WAAWG,QAAS,kBAAMV,EAAQM,IAAtD,oBAGA,eAAC,IAAD,CAAUC,UAAU,iBAApB,UACE,cAAC,IAAD,CACEA,UAAU,aACVG,QAAS,kBAAMR,EAAYI,EAAI,cAEjC,cAAC,IAAD,CACEC,UAAU,gBACVG,QAAS,kBAAMR,EAAYI,EAAI,cAEjC,cAAC,IAAD,CACEC,UAAU,gBACVG,QAAS,kBAAMR,EAAYI,EAAI,cAEjC,cAAC,IAAD,CACEC,UAAU,eACVG,QAAS,kBAAMR,EAAYI,EAAI,cAEjC,cAAC,IAAD,CACEC,UAAU,cACVG,QAAS,kBAAMR,EAAYI,EAAI,iBAInC,eAAC,IAAD,CAAUC,UAAU,iBAApB,UACE,cAAC,IAAD,CAAUG,QAAS,kBAAMN,EAAWE,EAAI,SAAxC,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAUI,QAAS,kBAAMN,EAAWE,EAAI,UAAxC,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAUI,QAAS,kBAAMN,EAAWE,EAAI,KAAxC,0BC3DVK,IAAMC,cAAc,SAEpB,IAuMeC,EAvMH,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAAmB,EACnBC,mBAAS,IADU,mBACtCC,EADsC,KAC/BC,EAD+B,OAEXF,oBAAS,GAFE,mBAEtCG,EAFsC,KAE3BC,EAF2B,OAGHJ,oBAAS,GAHN,mBAGtCK,EAHsC,KAGvBC,EAHuB,OAIrBN,mBAAS,IAJY,mBAItCO,EAJsC,KAIhCC,EAJgC,OAKjBR,mBAAS,IALQ,mBAKtCS,EALsC,KAK9BC,EAL8B,KAOvCC,EAAWC,mBACXC,EAAeD,mBAErBE,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,MACC,CAACf,IAEJa,qBAAU,YACU,IAAdX,GACFc,YAAW,WACTN,EAASO,QAAQC,UAChB,KAEJ,CAAChB,IAEJW,qBAAU,YACc,IAAlBT,GACFY,YAAW,WACTJ,EAAaK,QAAQC,UACpB,KAEJ,CAACd,IAEJ,IAAMe,EAAiB,SAACC,GACR,UAAVA,EAAEC,OACc,IAAdnB,EACFoB,KAC2B,IAAlBlB,GACTmB,MAUAD,EAAU,WACdnB,GAAa,GACA,KAATG,GACJL,GAAS,SAACuB,GAAD,4BACJA,GADI,CAEP,CAAEpC,GAAIqC,cAAUxC,KAAM,GAAIF,MAAO,UAAWF,KAAMyB,SAKhDoB,EAAa,SAACtC,GAClBa,EAASD,EAAM2B,QAAO,SAACC,GAAD,OAAUA,EAAKxC,KAAOA,OAIxCJ,EAAc,SAACI,EAAIL,GACvBkB,EACED,EAAM6B,KAAI,SAACD,GACT,OAAIA,EAAKxC,KAAOA,EACP,CAAEA,GAAIwC,EAAKxC,GAAIH,KAAM2C,EAAK3C,KAAMF,MAAOA,EAAOF,KAAM+C,EAAK/C,MAE3D+C,OAMP1C,EAAa,SAACE,EAAIH,GACtBgB,EACED,EAAM6B,KAAI,SAACD,GACT,OAAIA,EAAKxC,KAAOA,EACP,CAAEA,GAAIwC,EAAKxC,GAAIH,KAAMA,EAAMF,MAAO6C,EAAK7C,MAAOF,KAAM+C,EAAK/C,MAE3D+C,OAMPL,EAAiB,WACrBlB,GAAiB,GACJ,KAATC,GAEJL,EACED,EAAM6B,KAAI,SAACD,GACT,OAAIA,EAAKxC,KAAOoB,EACP,CAAEpB,GAAIwC,EAAKxC,GAAIH,KAAM2C,EAAK3C,KAAMF,MAAO6C,EAAK7C,MAAOF,KAAMyB,GAE3DsB,OAMPE,EAAa,SAAC1C,EAAIP,GACtB4B,EAAUrB,GACVmB,EAAQ1B,GACRwB,GAAiB,IAGbS,EAAyB,gBACFiB,IAAvBjC,EAAaF,IAGfK,EACEH,EAAaF,GAAMiC,KAAI,SAACD,GACtB,MAAO,CACLxC,GAAIqC,cACJxC,KAAM2C,EAAK3C,KACXF,MAAO6C,EAAK7C,MACZF,KAAM+C,EAAK/C,WAOfkC,EAAgB,WACpB,IAAIiB,EAAMhC,EAAM6B,KAAI,SAACD,GACnB,MAAO,CAAE3C,KAAM2C,EAAK3C,KAAMF,MAAO6C,EAAK7C,MAAOF,KAAM+C,EAAK/C,SAGtDoD,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,iBAC1CJ,EAAG,2BAAQA,GAAR,kBAAcrC,EAAOoC,IAExBI,aAAaE,QAAb,eAAqCJ,KAAKK,UAAUN,KAKtD,OACE,sBAAKO,cAhGa,WAClBrC,GAAa,GACbI,EAAQ,KA8FyBlB,UAAU,MAA3C,UACGQ,IAAUD,EACT,8BACE,sBAAMP,UAAU,QAAhB,SAAyBO,MAG3BA,EAEF,eAAC,IAAD,CACEP,UAAU,QACVoD,iBAAiB,UACjBC,OAAQxC,EACRyC,eAAgBrB,EAJlB,UAME,oCACA,uBACEsB,WAAW,QACXC,IAAKnC,EACLoC,WAAY3B,EACZ4B,SAAU,SAAC3B,GAAD,OAAOb,EAAQa,EAAE4B,OAAOC,QAClCC,KAAK,OACLD,MAAO3C,IAET,wBAAQd,QAAS8B,EAAjB,qBAEF,eAAC,IAAD,CACEjC,UAAU,QACVoD,iBAAiB,UACjBC,OAAQtC,EACRuC,eAAgBpB,EAJlB,UAME,qCACA,uBACE4B,WAAW,QACXN,IAAKjC,EACLkC,WAAY3B,EACZ4B,SAAU,SAAC3B,GAAD,OAAOb,EAAQa,EAAE4B,OAAOC,QAClCC,KAAK,OACLD,MAAO3C,IAET,wBAAQd,QAAS+B,EAAjB,qBAEDvB,EAAM6B,KAAI,SAACD,GAAD,OACT,cAAC,EAAD,CAEExC,GAAIwC,EAAKxC,GACTH,KAAM2C,EAAK3C,KACXC,WAAYA,EACZC,KAAM2C,EACNjD,KAAM+C,EAAK/C,KACXE,MAAO6C,EAAK7C,MACZC,YAAaA,EACbF,QAAS4C,GARJE,EAAKxC,WC1LdgE,EAAc,CAClB,SACA,SACA,UACA,YACA,WACA,SACA,YAGIC,EAAc,CAClB,SACA,UACA,YACA,WACA,SACA,WACA,UAyCF,SAASC,IACP,IAAIC,EAAa,IAAIC,KAGrB,OAFe,IAAIA,KAAKD,EAAWE,cAAeF,EAAWG,WAAY,GAEzDC,SAGH,SAASC,IAAO,IAAD,EACF7D,mBAAS,IADP,mBACrB8D,EADqB,KACdC,EADc,OAEJ/D,mBAASqD,GAFL,mBAErBW,EAFqB,KAEfC,EAFe,OAGYjE,mBAAS,IAHrB,mBAGrBkE,EAHqB,KAGPC,EAHO,OAIFnE,mBAAS,IAJP,mBAIrBF,EAJqB,KAIdsE,EAJc,OAKUpE,mBAAS,IALnB,mBAKrBqE,EALqB,KAKRC,EALQ,OAMMtE,mBAAS,IANf,mBAMrBuE,EANqB,KAMVC,EANU,OAQIxE,mBAAS,GARb,mBAQrByE,EARqB,KAQXC,EARW,OASI1E,mBAAS,GATb,mBASrB2E,EATqB,KASXC,EATW,OAUI5E,oBAAS,GAVb,mBAUrB6E,EAVqB,KAUXC,EAVW,OAYY9E,mBAAS,IAZrB,mBAYrB+E,EAZqB,KAYPC,EAZO,KAc5BlE,qBAAU,WAGR,GAA6C,OAAzCuB,aAAaC,QAAQ,gBACvBD,aAAaE,QAAQ,eAAgBJ,KAAKK,UAAUuC,IACpDE,QAAQC,IAAI,6CACP,CACL,IAAIC,EAAOhD,KAAKC,MAAMC,aAAaC,QAAQ,iBAC3C0C,EAAgBG,MAIjB,IAEHrE,qBAAU,WAGR,IAFA,IAAIsE,EAAY,GACZC,EArDR,WACE,IAAI7B,EAAa,IAAIC,KAMrB,OALgB,IAAIA,KAClBD,EAAWE,cACXF,EAAWG,WAAa,EACxB,GAEe2B,UA8CCC,GAA6B,EACpCC,EAAI,EAAGA,EAAIH,EAAWG,IAC7BJ,EAAUK,KAAK/D,eAKjB,IAFA,IAAIgE,EAASnC,IACToC,EAAkB,GACbH,EAAI,EAAGA,EAAIE,EAASjB,EAAUe,IACrCG,EAAgBF,KAAK/D,eAGvB,IAAIkE,EAAUrC,IACVsC,EAAWT,EAAUU,OAASF,EAE9BC,EAAW,GACbD,EAAU,GAAKC,EACNA,EAAW,KACpBD,EAAU,GAAKC,GAKjB,IADA,IAAIE,EAAgB,GACXP,EAAI,EAAGA,EAAII,EAAUjB,EAAUa,IACtCO,EAAcN,KAAK/D,eAGrByC,EArGJ,WACE,IAcItE,EAAO,IAAI4D,KAGf,MAjBe,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGgB,IAAIA,KAAK5D,EAAK6D,cAAe7D,EAAK8D,WAAY,GAEtCA,YAmFRqC,IAEhB1B,EAAeqB,GACf5B,EAASqB,GACTZ,EAAauB,GAEb3B,GA1Ee,IAAIX,MACH6B,aA0Ef,CAACX,EAAUF,IAuBd,OACE,sBAAKnF,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SAA4B4E,IAC5B,qBAAK5E,UAAU,WAAf,SACG0E,EAAKlC,KAAI,SAACmE,GAAD,OACR,qBAAe3G,UAAU,UAAzB,SACG2G,GADOA,QAKd,sBAAK3G,UAAU,QAAf,UACG+E,EAAYvC,KAAI,SAACmE,GAAD,OACf,qBAAe3G,UAAU,aAAf2G,MAEXnC,EAAMhC,KAAI,SAACoE,EAAKC,GAAN,OACT,cAAC,EAAD,CACEpG,aAAcgF,EAEdlF,KAAMsG,EAAQ,EACdrG,MAAOA,GAFFoG,MAKR3B,EAAUzC,KAAI,SAACmE,GAAD,OACb,qBAAe3G,UAAU,aAAf2G,SAGd,wBAAQxG,QA/CU,WACpB,IAAiB,IAAboF,EAKF,OAJAH,EAAY,GACZE,EAAY,GACZX,EAAQZ,QACRyB,GAAY,GAKsB,IAAhCvB,KACFqB,GAAa,GACbF,EAAY,KAEZE,EAAY,GACZF,GAAa,IAEfT,EAAQX,GACRwB,GAAY,IA6BV,oCClLNsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.88a872ee.chunk.js","sourcesContent":["import { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\r\nimport * as FaIcons from 'react-icons/fa'\r\n\r\nconst Task = ({\r\n  task,\r\n  delTask,\r\n  color,\r\n  changeColor,\r\n  icon,\r\n  changeIcon,\r\n  edit,\r\n  id,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ContextMenuTrigger id={id}>\r\n        <div className=\"task\" style={{ backgroundColor: `${color}` }}>\r\n          {icon === 'cake' ? (\r\n            <FaIcons.FaBirthdayCake className=\"cake\" />\r\n          ) : icon === 'plane' ? (\r\n            <FaIcons.FaPlane className=\"icons\" />\r\n          ) : (\r\n            ''\r\n          )}\r\n          {task}\r\n        </div>\r\n      </ContextMenuTrigger>\r\n\r\n      <ContextMenu className=\"contextMenu\" id={id}>\r\n        <MenuItem onClick={() => edit(id, task)}>edit</MenuItem>\r\n\r\n        <MenuItem className=\"menuItem\" onClick={() => delTask(id)}>\r\n          delete\r\n        </MenuItem>\r\n        <MenuItem className=\"colorContainer\">\r\n          <MenuItem\r\n            className=\"circle red\"\r\n            onClick={() => changeColor(id, '#ffb3ba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle orange\"\r\n            onClick={() => changeColor(id, '#ffdfba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle yellow\"\r\n            onClick={() => changeColor(id, '#ffffba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle green\"\r\n            onClick={() => changeColor(id, '#baffc9')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle blue\"\r\n            onClick={() => changeColor(id, '#bae1ff')}\r\n          ></MenuItem>\r\n        </MenuItem>\r\n\r\n        <MenuItem className=\"colorContainer\">\r\n          <MenuItem onClick={() => changeIcon(id, 'cake')}>\r\n            <FaIcons.FaBirthdayCake />\r\n          </MenuItem>\r\n          <MenuItem onClick={() => changeIcon(id, 'plane')}>\r\n            <FaIcons.FaPlane />\r\n          </MenuItem>\r\n          <MenuItem onClick={() => changeIcon(id, '')}>\"\"</MenuItem>\r\n        </MenuItem>\r\n      </ContextMenu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import { useEffect, useState, React, useRef } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport Modal from 'react-modal'\r\nimport Task from './Task'\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst Day = ({ date, today, calendarinfo }) => {\r\n  const [items, setItems] = useState([])\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [editModalOpen, setEditModalOpen] = useState(false)\r\n  const [text, setText] = useState('')\r\n  const [editId, setEditId] = useState('')\r\n\r\n  const inputRef = useRef()\r\n  const editInputRef = useRef()\r\n\r\n  useEffect(() => {\r\n    updateItemsFromStorage()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    updateStorage()\r\n  }, [items])\r\n\r\n  useEffect(() => {\r\n    if (modalOpen === true) {\r\n      setTimeout(() => {\r\n        inputRef.current.focus()\r\n      }, 1)\r\n    }\r\n  }, [modalOpen])\r\n\r\n  useEffect(() => {\r\n    if (editModalOpen === true) {\r\n      setTimeout(() => {\r\n        editInputRef.current.focus()\r\n      }, 1)\r\n    }\r\n  }, [editModalOpen])\r\n\r\n  const handelKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (modalOpen === true) {\r\n        addItem()\r\n      } else if (editModalOpen === true) {\r\n        editModalClose()\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setModalOpen(true)\r\n    setText('')\r\n  }\r\n\r\n  const addItem = () => {\r\n    setModalOpen(false)\r\n    if (text === '') return\r\n    setItems((oldVal) => [\r\n      ...oldVal,\r\n      { id: uuidv4(), icon: '', color: '#bae1ff', task: text },\r\n    ])\r\n    // updateStorage()\r\n  }\r\n\r\n  const removeTask = (id) => {\r\n    setItems(items.filter((item) => item.id !== id))\r\n    // updateStorage()\r\n  }\r\n\r\n  const changeColor = (id, color) => {\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === id) {\r\n          return { id: item.id, icon: item.icon, color: color, task: item.task }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    // updateStorage()\r\n  }\r\n\r\n  const changeIcon = (id, icon) => {\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === id) {\r\n          return { id: item.id, icon: icon, color: item.color, task: item.task }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    // updateStorage()\r\n  }\r\n\r\n  const editModalClose = () => {\r\n    setEditModalOpen(false)\r\n    if (text === '') return\r\n\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === editId) {\r\n          return { id: item.id, icon: item.icon, color: item.color, task: text }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    // updateStorage()\r\n  }\r\n\r\n  const handleEdit = (id, task) => {\r\n    setEditId(id)\r\n    setText(task)\r\n    setEditModalOpen(true)\r\n  }\r\n\r\n  const updateItemsFromStorage = () => {\r\n    if (calendarinfo[date] === undefined) {\r\n      // console.log(\"it's undefined\")\r\n    } else {\r\n      setItems(\r\n        calendarinfo[date].map((item) => {\r\n          return {\r\n            id: uuidv4(),\r\n            icon: item.icon,\r\n            color: item.color,\r\n            task: item.task,\r\n          }\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const updateStorage = () => {\r\n    let arr = items.map((item) => {\r\n      return { icon: item.icon, color: item.color, task: item.task }\r\n    })\r\n\r\n    let obj = JSON.parse(localStorage.getItem('calendarInfo'))\r\n    obj = { ...obj, [date]: arr }\r\n\r\n    localStorage.setItem(`calendarInfo`, JSON.stringify(obj))\r\n    // console.log('updated calendarInfo localstorage:')\r\n    // console.log(obj)\r\n  }\r\n\r\n  return (\r\n    <div onDoubleClick={handleClick} className=\"day\">\r\n      {today === date ? (\r\n        <div>\r\n          <span className=\"today\">{date}</span>\r\n        </div>\r\n      ) : (\r\n        date\r\n      )}\r\n      <Modal\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n        isOpen={modalOpen}\r\n        onRequestClose={addItem}\r\n      >\r\n        <p>add</p>\r\n        <input\r\n          spellCheck=\"false\"\r\n          ref={inputRef}\r\n          onKeyPress={handelKeyPress}\r\n          onChange={(e) => setText(e.target.value)}\r\n          type=\"text\"\r\n          value={text}\r\n        />\r\n        <button onClick={addItem}> ok </button>\r\n      </Modal>\r\n      <Modal\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n        isOpen={editModalOpen}\r\n        onRequestClose={editModalClose}\r\n      >\r\n        <p>edit</p>\r\n        <input\r\n          spellcheck=\"false\"\r\n          ref={editInputRef}\r\n          onKeyPress={handelKeyPress}\r\n          onChange={(e) => setText(e.target.value)}\r\n          type=\"text\"\r\n          value={text}\r\n        />\r\n        <button onClick={editModalClose}> ok </button>\r\n      </Modal>\r\n      {items.map((item) => (\r\n        <Task\r\n          key={item.id}\r\n          id={item.id}\r\n          icon={item.icon}\r\n          changeIcon={changeIcon}\r\n          edit={handleEdit}\r\n          task={item.task}\r\n          color={item.color}\r\n          changeColor={changeColor}\r\n          delTask={removeTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Day\r\n","import './App.css'\nimport { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport Day from './components/Day'\n\nconst sundayFirst = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n]\n\nconst mondayFirst = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n]\n\nfunction getCurrentMonth() {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  let date = new Date()\n  let todaysMonth = new Date(date.getFullYear(), date.getMonth(), 1)\n\n  return months[todaysMonth.getMonth()]\n}\n\n//returns total number of days for the current month\nfunction getNumDaysOfCurrentMonth() {\n  let todaysDate = new Date()\n  let totalDays = new Date(\n    todaysDate.getFullYear(),\n    todaysDate.getMonth() + 1,\n    0\n  )\n  return totalDays.getDate()\n}\n\nfunction getTodaysDate() {\n  let todaysDate = new Date()\n  return todaysDate.getDate()\n}\n\n//returns 0 for Sunday, 1 for Monday, etc...\nfunction getFirstDayOfCurrentMonth() {\n  let todaysDate = new Date()\n  let firstDay = new Date(todaysDate.getFullYear(), todaysDate.getMonth(), 1)\n\n  return firstDay.getDay()\n}\n\nexport default function App() {\n  const [dates, setDates] = useState([])\n  const [days, setDays] = useState(sundayFirst)\n  const [currentMonth, setCurrentMonth] = useState('')\n  const [today, setToday] = useState('')\n  const [startFiller, setStartFiller] = useState([])\n  const [endFiller, setEndFiller] = useState([])\n\n  const [msFiller, setmsFiller] = useState(0)\n  const [meFiller, setmeFiller] = useState(0)\n  const [monFirst, setMonFirst] = useState(false)\n\n  const [calendarInfo, setCalendarInfo] = useState({})\n\n  useEffect(() => {\n    //if calendarInfo is in storage update our cal\n    //if not then create it\n    if (localStorage.getItem('calendarInfo') === null) {\n      localStorage.setItem('calendarInfo', JSON.stringify(calendarInfo))\n      console.log('created calendarInfo in local storage')\n    } else {\n      let info = JSON.parse(localStorage.getItem('calendarInfo'))\n      setCalendarInfo(info)\n      // console.log('got calendarInfo from local storage')\n      // console.log(info)\n    }\n  }, [])\n\n  useEffect(() => {\n    let tempDates = []\n    let numOfDays = getNumDaysOfCurrentMonth() + 1\n    for (let i = 1; i < numOfDays; i++) {\n      tempDates.push(uuidv4())\n    }\n\n    let filler = getFirstDayOfCurrentMonth()\n    let tempStartFiller = []\n    for (let i = 0; i < filler + msFiller; i++) {\n      tempStartFiller.push(uuidv4())\n    }\n\n    let fillAmt = getFirstDayOfCurrentMonth()\n    let daysUsed = tempDates.length + fillAmt\n\n    if (daysUsed < 35) {\n      fillAmt = 35 - daysUsed\n    } else if (daysUsed < 42) {\n      fillAmt = 42 - daysUsed\n      // calendarElement.style.gridTemplateRows = 'repeat(6,1fr)'\n    }\n\n    let tempEndFiller = []\n    for (let i = 0; i < fillAmt + meFiller; i++) {\n      tempEndFiller.push(uuidv4())\n    }\n\n    setCurrentMonth(getCurrentMonth())\n\n    setStartFiller(tempStartFiller)\n    setDates(tempDates)\n    setEndFiller(tempEndFiller)\n\n    setToday(getTodaysDate())\n  }, [meFiller, msFiller])\n\n  const weekdayToggle = () => {\n    if (monFirst === true) {\n      setmsFiller(0)\n      setmeFiller(0)\n      setDays(sundayFirst)\n      setMonFirst(false)\n      return\n    }\n    // -1 sunday add 6 msfiller\n    // +1 sunday sub 6 mefiller\n    if (getFirstDayOfCurrentMonth() === 0) {\n      setmeFiller(-6)\n      setmsFiller(6)\n    } else {\n      setmeFiller(1)\n      setmsFiller(-1)\n    }\n    setDays(mondayFirst)\n    setMonFirst(true)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"monthName\">{currentMonth}</div>\n      <div className=\"weekdays\">\n        {days.map((day) => (\n          <div key={day} className=\"weekday\">\n            {day}\n          </div>\n        ))}\n      </div>\n      <div className=\"month\">\n        {startFiller.map((day) => (\n          <div key={day} className=\"fillerday\"></div>\n        ))}\n        {dates.map((num, index) => (\n          <Day\n            calendarinfo={calendarInfo}\n            key={num}\n            date={index + 1}\n            today={today}\n          />\n        ))}\n        {endFiller.map((day) => (\n          <div key={day} className=\"fillerday\"></div>\n        ))}\n      </div>\n      <button onClick={weekdayToggle}>monday first toggle</button>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}