{"version":3,"sources":["components/Task.js","components/Day.js","App.js","index.js"],"names":["Task","task","delTask","color","changeColor","icon","changeIcon","edit","id","className","style","backgroundColor","onClick","Modal","setAppElement","Day","date","today","current","useState","items","setItems","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","text","setText","editId","setEditId","updated","setUpdated","inputRef","useRef","editInputRef","useEffect","info","JSON","parse","localStorage","getItem","undefined","year","month","map","item","updateItemsFromStorage","setItem","stringify","years","_","set","updateStorage","setTimeout","focus","handelKeyPress","e","key","addItem","editModalClose","oldVal","uuidv4","removeTask","filter","handleEdit","onDoubleClick","overlayClassName","isOpen","onRequestClose","spellCheck","ref","onKeyPress","onChange","target","value","type","sundayFirst","mondayFirst","App","dates","setDates","days","setDays","setToday","startFiller","setStartFiller","endFiller","setEndFiller","msFiller","setmsFiller","meFiller","setmeFiller","monFirst","setMonFirst","extraRow","setExtraRow","displayedCal","setDisplayedCal","calOffset","setCalOffset","offset","moment","add","format","firstDay","parseInt","startOf","totalDays","endOf","tempDates","i","push","fillAmt","filler","tempStartFiller","daysUsed","length","tempEndFiller","day","num","index","checked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bb865ba.chunk.js","sourcesContent":["import { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\r\nimport * as FaIcons from 'react-icons/fa'\r\n\r\nconst Task = ({\r\n  task,\r\n  delTask,\r\n  color,\r\n  changeColor,\r\n  icon,\r\n  changeIcon,\r\n  edit,\r\n  id,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ContextMenuTrigger id={id}>\r\n        <div className=\"task\" style={{ backgroundColor: `${color}` }}>\r\n          {icon === 'cake' ? (\r\n            <FaIcons.FaBirthdayCake className=\"cake\" />\r\n          ) : icon === 'plane' ? (\r\n            <FaIcons.FaPlane className=\"icons\" />\r\n          ) : (\r\n            ''\r\n          )}\r\n          {task}\r\n        </div>\r\n      </ContextMenuTrigger>\r\n\r\n      <ContextMenu className=\"contextMenu\" id={id}>\r\n        <MenuItem onClick={() => edit(id, task)}>edit</MenuItem>\r\n\r\n        <MenuItem className=\"menuItem\" onClick={() => delTask(id)}>\r\n          delete\r\n        </MenuItem>\r\n        <MenuItem className=\"colorContainer\">\r\n          <MenuItem\r\n            className=\"circle red\"\r\n            onClick={() => changeColor(id, '#ffb3ba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle orange\"\r\n            onClick={() => changeColor(id, '#ffdfba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle yellow\"\r\n            onClick={() => changeColor(id, '#ffffba')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle green\"\r\n            onClick={() => changeColor(id, '#baffc9')}\r\n          ></MenuItem>\r\n          <MenuItem\r\n            className=\"circle blue\"\r\n            onClick={() => changeColor(id, '#bae1ff')}\r\n          ></MenuItem>\r\n        </MenuItem>\r\n\r\n        <MenuItem className=\"colorContainer\">\r\n          <MenuItem onClick={() => changeIcon(id, 'cake')}>\r\n            <FaIcons.FaBirthdayCake />\r\n          </MenuItem>\r\n          <MenuItem onClick={() => changeIcon(id, 'plane')}>\r\n            <FaIcons.FaPlane />\r\n          </MenuItem>\r\n          <MenuItem onClick={() => changeIcon(id, '')}>\"\"</MenuItem>\r\n        </MenuItem>\r\n      </ContextMenu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import { useEffect, useState, React, useRef } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport _ from 'lodash'\r\nimport Modal from 'react-modal'\r\nimport Task from './Task'\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst Day = ({ date, today, current }) => {\r\n  const [items, setItems] = useState([]) //list of items for a day\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [editModalOpen, setEditModalOpen] = useState(false)\r\n  const [text, setText] = useState('') //input text\r\n  const [editId, setEditId] = useState('') //id of item to edit\r\n  const [updated, setUpdated] = useState(false) //boolean used to trigger localstorage to be updated\r\n\r\n  //refs used to focus() input box after modals are open\r\n  const inputRef = useRef()\r\n  const editInputRef = useRef()\r\n\r\n  const updateItemsFromStorage = () => {\r\n    let info = JSON.parse(localStorage.getItem('calendarInfo'))\r\n\r\n    if (info === null) return\r\n\r\n    if (info?.[current.year]?.[current.month] === undefined) return\r\n\r\n    // console.log(info[current.year][current.month].date)\r\n    //if it's not null/undefined then map it\r\n    if (info[current.year][current.month][date]) {\r\n      setItems(\r\n        info[current.year][current.month][date].map((item) => {\r\n          return {\r\n            id: item.id,\r\n            icon: item.icon,\r\n            color: item.color,\r\n            task: item.task,\r\n          }\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const updateStorage = () => {\r\n    // if it doesn't exist at all create an empty object {}\r\n    if (localStorage.getItem('calendarInfo') === null) {\r\n      localStorage.setItem('calendarInfo', JSON.stringify({}))\r\n    }\r\n\r\n    let years = JSON.parse(localStorage.getItem('calendarInfo'))\r\n\r\n    _.set(years, `${current.year}.${current.month}.${date}`, items)\r\n\r\n    localStorage.setItem('calendarInfo', JSON.stringify(years))\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateItemsFromStorage()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (updated) {\r\n      updateStorage()\r\n      setUpdated(false)\r\n    }\r\n  }, [updated])\r\n\r\n  useEffect(() => {\r\n    if (modalOpen === true) {\r\n      setTimeout(() => {\r\n        inputRef.current.focus()\r\n      }, 1)\r\n    }\r\n  }, [modalOpen])\r\n\r\n  useEffect(() => {\r\n    if (editModalOpen === true) {\r\n      setTimeout(() => {\r\n        editInputRef.current.focus()\r\n      }, 1)\r\n    }\r\n  }, [editModalOpen])\r\n\r\n  const handelKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (modalOpen === true) {\r\n        addItem()\r\n      } else if (editModalOpen === true) {\r\n        editModalClose()\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setModalOpen(true)\r\n    setText('')\r\n  }\r\n\r\n  const addItem = () => {\r\n    setModalOpen(false)\r\n    if (text === '') return\r\n    setItems((oldVal) => [\r\n      ...oldVal,\r\n      { id: uuidv4(), icon: '', color: '#bae1ff', task: text },\r\n    ])\r\n    setUpdated(true)\r\n  }\r\n\r\n  const removeTask = (id) => {\r\n    setItems(items.filter((item) => item.id !== id))\r\n    setUpdated(true)\r\n  }\r\n\r\n  const changeColor = (id, color) => {\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === id) {\r\n          return { id: item.id, icon: item.icon, color: color, task: item.task }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    setUpdated(true)\r\n  }\r\n\r\n  const changeIcon = (id, icon) => {\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === id) {\r\n          return { id: item.id, icon: icon, color: item.color, task: item.task }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    setUpdated(true)\r\n  }\r\n\r\n  const editModalClose = () => {\r\n    setEditModalOpen(false)\r\n    if (text === '') return\r\n\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === editId) {\r\n          return { id: item.id, icon: item.icon, color: item.color, task: text }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    setUpdated(true)\r\n  }\r\n\r\n  const handleEdit = (id, task) => {\r\n    setEditId(id)\r\n    setText(task)\r\n    setEditModalOpen(true)\r\n  }\r\n\r\n  return (\r\n    <div onDoubleClick={handleClick} className=\"day\">\r\n      {today === date ? (\r\n        <div>\r\n          <span className=\"today\">{date}</span>\r\n        </div>\r\n      ) : (\r\n        date\r\n      )}\r\n      <Modal\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n        isOpen={modalOpen}\r\n        onRequestClose={addItem}\r\n      >\r\n        <p>add</p>\r\n        <input\r\n          spellCheck=\"false\"\r\n          ref={inputRef}\r\n          onKeyPress={handelKeyPress}\r\n          onChange={(e) => setText(e.target.value)}\r\n          type=\"text\"\r\n          value={text}\r\n        />\r\n        <button onClick={addItem}> ok </button>\r\n      </Modal>\r\n      <Modal\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n        isOpen={editModalOpen}\r\n        onRequestClose={editModalClose}\r\n      >\r\n        <p>edit</p>\r\n        <input\r\n          spellCheck=\"false\"\r\n          ref={editInputRef}\r\n          onKeyPress={handelKeyPress}\r\n          onChange={(e) => setText(e.target.value)}\r\n          type=\"text\"\r\n          value={text}\r\n        />\r\n        <button onClick={editModalClose}> ok </button>\r\n      </Modal>\r\n      {items.map((item) => (\r\n        <Task\r\n          key={item.id}\r\n          id={item.id}\r\n          icon={item.icon}\r\n          changeIcon={changeIcon}\r\n          edit={handleEdit}\r\n          task={item.task}\r\n          color={item.color}\r\n          changeColor={changeColor}\r\n          delTask={removeTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Day\r\n","import './App.css'\nimport { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport moment from 'moment'\nimport Day from './components/Day'\nimport Switch from 'react-switch'\n\nconst sundayFirst = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n]\n\nconst mondayFirst = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n]\n\nfunction getTodaysDate() {\n  return parseInt(moment().format('D'))\n}\n\nexport default function App() {\n  const [dates, setDates] = useState([]) //date array to loop over for everyday of month\n  const [days, setDays] = useState(sundayFirst) // sun-sat or mon-sun\n  const [today, setToday] = useState('')\n  const [startFiller, setStartFiller] = useState([])\n  const [endFiller, setEndFiller] = useState([])\n\n  const [msFiller, setmsFiller] = useState(0) //mon-sun filler offset\n  const [meFiller, setmeFiller] = useState(0) // \"\"\n  const [monFirst, setMonFirst] = useState(false)\n\n  const [extraRow, setExtraRow] = useState(false) //some months requires 6 grid rows instead of 5\n\n  const [displayedCal, setDisplayedCal] = useState({}) //the current Calendar on screen. ex: March 2021\n  const [calOffset, setCalOffset] = useState(0)\n\n  //set displayedCal to current month & year\n  useEffect(() => {\n    getMonth(calOffset)\n  }, [calOffset])\n\n  useEffect(() => {\n    ///////////////\n\n    if (monFirst === false) {\n      setmsFiller(0)\n      setmeFiller(0)\n      setDays(sundayFirst)\n    }\n    if (monFirst === true) {\n      setDays(mondayFirst)\n      // -1 sunday add 6 msfiller\n      // +1 sunday sub 6 mefiller\n      if (displayedCal.firstDay === 0) {\n        setmsFiller(6)\n        setmeFiller(-6)\n      } else {\n        setmsFiller(-1)\n        setmeFiller(1)\n      }\n    }\n\n    //dates filler\n    let tempDates = []\n    for (let i = 1; i < displayedCal.totalDays + 1; i++) {\n      tempDates.push(uuidv4())\n    }\n\n    //start filler\n    let filler = displayedCal.firstDay + msFiller\n    let tempStartFiller = []\n    for (let i = 0; i < filler; i++) {\n      tempStartFiller.push(uuidv4())\n    }\n\n    //end filler\n    let fillAmt // = displayedCal.firstDay + meFiller\n    let daysUsed = tempDates.length + tempStartFiller.length\n\n    if (daysUsed <= 35) {\n      fillAmt = 35 - daysUsed\n      setExtraRow(false)\n    } else if (daysUsed <= 42) {\n      fillAmt = 42 - daysUsed\n      // calendarElement.style.gridTemplateRows = 'repeat(6,1fr)'\n      setExtraRow(true)\n    }\n\n    if (fillAmt === 7) fillAmt = 0 //edge case if feb only needs 4 rows for 28 days\n\n    let tempEndFiller = []\n    for (let i = 0; i < fillAmt; i++) {\n      tempEndFiller.push(uuidv4())\n    }\n\n    setStartFiller(tempStartFiller)\n    setDates(tempDates)\n    setEndFiller(tempEndFiller)\n\n    setToday(getTodaysDate())\n  }, [monFirst, meFiller, msFiller, displayedCal])\n\n  function getMonth(offset) {\n    // setmsFiller(0)\n    // setmeFiller(0)\n    setDisplayedCal({\n      month: moment().add(offset, 'month').format('MMMM'),\n      year: moment().add(offset, 'month').format('y'),\n      firstDay: parseInt(\n        moment().add(offset, 'month').startOf('month').format('d')\n      ),\n      totalDays: parseInt(\n        moment().add(offset, 'month').endOf('month').format('D')\n      ),\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"monthName\">\n        {displayedCal.month} {displayedCal.year}\n      </div>\n      <div className=\"weekdays\">\n        {days.map((day) => (\n          <div key={day} className=\"weekday\">\n            {day}\n          </div>\n        ))}\n      </div>\n      <div className={`month ${extraRow ? 'extra-row' : ''}`}>\n        {startFiller.map((day) => (\n          <div key={day} className=\"fillerday\"></div>\n        ))}\n        {dates.map((num, index) => (\n          <Day\n            current={displayedCal}\n            key={num}\n            date={index + 1}\n            today={today}\n          />\n        ))}\n        {endFiller.map((day) => (\n          <div key={day} className=\"fillerday\"></div>\n        ))}\n      </div>\n      <div>\n        <button onClick={() => setCalOffset(calOffset - 1)}>prev</button>\n        <button onClick={() => setCalOffset(0)}>current</button>\n        <button onClick={() => setCalOffset(calOffset + 1)}>next</button>\n      </div>\n      <div className=\"monday-switch\">\n        <span>Monday first</span>\n        <Switch\n          onChange={() => setMonFirst(!monFirst)}\n          checked={monFirst}\n          className=\"react-switch\"\n          onColor=\"#86d3ff\"\n          onHandleColor=\"#2693e6\"\n          handleDiameter={25}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={20}\n          width={48}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}